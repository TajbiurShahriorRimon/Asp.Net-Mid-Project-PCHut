@model PcHut.Models.ImageViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Html.EnableClientValidation(true);
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.product_id)
        @Html.HiddenFor(model => model.status)
        @Html.HiddenFor(model => model.image)

        <div class="form-group">
            @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
            </div>
        </div>

        @{ 
            int brandId = Model.brand_id;
        }
        <div class="form-group">
            @Html.LabelFor(model => model.brand_id, "brand_name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("brand_id", null, htmlAttributes: new { @class = "form-control" })*@
                <select name="brand_id">
                    @foreach (var item in ViewData["brands"] as IList<PcHut.Models.brand>)
                    {
                        <option value="@item.brand_id"
                                @{
                            if(item.brand_id == brandId)
                            {
                                <text>selected</text>
                            }
                        }>@item.brand_name</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.brand_id, "", new { @class = "text-danger" })
            </div>
        </div>

        @{ 
            int catId = Model.category_id;
        }
        <div class="form-group">
            @Html.LabelFor(model => model.category_id, "category_name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("category_id", null, htmlAttributes: new { @class = "form-control" })*@
                <select name="category_id">
                    @foreach (var item in ViewData["categories"] as IList<PcHut.Models.category>)
                    {
                        <option value="@item.category_id" @{
                            if(item.category_id == catId)
                            {
                                <text>selected</text>
                            }
                        }>@item.category_name</option>
                    }
                </select>

                @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.warranty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.warranty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.warranty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPic, htmlAttributes: new { @class = "control-label col-md-2" })
            
                @if (Model.image != null)
                {
                    @Html.DisplayFor(modelItem => Model.image)
                    <img src="@Url.Content(Model.image)" alt="" height="200" width="250" />
                }
            <div align="center">
                <input type="file" name="ProductPic" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.specification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.specification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.specification, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Special, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Special, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Special, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
